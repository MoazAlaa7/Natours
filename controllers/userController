const User = require('../models/userModel');
const catchAsync = require('../utils/catchAsync');
const AppError = require('../utils/appError');
const factory = require('./controllerFactory');

const filterObj = (obj, ...allowedFields) => {
  const newObj = {};
  Object.keys(obj).forEach((key) => {
    if (allowedFields.includes(key)) newObj[key] = obj[key];
  });
  return newObj;
};

exports.getMyInfo = (req, res, next) => {
  const user = {
    name: req.user.name,
    email: req.user.email,
  };

  res.status(200).json({
    status: 'success',
    data: user,
  });
};

exports.updateMyInfo = catchAsync(async (req, res, next) => {
  // 1) Produce error if user tries to update password
  if (req.body.password || req.body.passwordConfirm) {
    return next(
      new AppError('Can not update password, please use /updatePassword', 400),
    );
  }

  // 2) Otherwise, filter unwanted input & update user info
  const filteredBody = filterObj(req.body, 'name', 'email');
  const updatedUser = await User.findByIdAndUpdate(req.user.id, filteredBody, {
    new: true,
    runValidators: true,
  });

  res.status(200).json({
    status: 'success',
    data: {
      user: updatedUser,
    },
  });
});

exports.deleteMyAcc = catchAsync(async (req, res, next) => {
  await User.findByIdAndDelete(req.user.id);

  res.status(204).json({
    status: 'success',
    data: null,
  });
});

exports.createUser = (req, res) => {
  res.status(501).json({
    status: 'error',
    message: 'The requested URL was not found',
  });
};

exports.getAllUsers = factory.getAll(User);
exports.getUser = factory.getOne(User);
exports.updateUser = factory.updateOne(User);
exports.deleteUser = factory.deleteOne(User);
